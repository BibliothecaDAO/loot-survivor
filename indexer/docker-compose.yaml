version: "3"

services:
  devnet:
    image: shardlabs/starknet-devnet:latest
    container_name: devnet
    restart: always
    command:
    - "--host=0.0.0.0"
    - "--port=5050"
    - "--disable-rpc-request-validation"
    - "--timeout=5000"
    - "--dump-path=/devnet-dumps/dump.pkl"
    - "--load-path=/devnet-dumps/dump.pkl"
    - "--dump-on=exit"
    - "--lite-mode"
    ports:
    - 5050:5050
    volumes:
    - /home/ec2-user/devnet-dumps:/devnet-dumps
    networks:
    - devnet_network

  apibara:
    image: quay.io/apibara/starknet:5e284618b2a1eea49aa04cb04d452ec48b3ffb99
    container_name: apibara
    ports:
    - 7171:7171
    depends_on:
    - devnet
    restart: always
    command:
    - "start"
    - "--data=/data"
    - "--rpc=http://devnet:5050/rpc"
    environment:
    - OTEL_SDK_DISABLED=true # disable tracing/metrics
    volumes:
    - /home/ec2-user/apibrara:/data
    networks:
    - devnet_network
    
  mongo-goerli:
    image: mongo:latest
    container_name: mongo-goerli
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${GOERLI_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${GOERLI_DB_PASSWORD}
    ports:
    - 27017:27017
    volumes:
    - /home/ec2-user/mongo-data/goerli:/data/db
    networks:
    - goerli_network

  mongo-devnet:
    image: mongo:latest
    container_name: mongo-devnet
    restart: always
    command: mongod --port 27018
    depends_on:
      - devnet
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DEVNET_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DEVNET_DB_PASSWORD}
    ports:
    - 27018:27018
    volumes:
    - /home/ec2-user/mongo-data/devnet:/data/db
    networks:
    - devnet_network

  indexer-goerli:
    image: starknetdev/loot-survivor-indexer:latest
    container_name: indexer-goerli
    restart: always
    depends_on:
      - mongo-goerli
    command:
    - start
    - --mongo-url
    - "mongodb://${GOERLI_DB_USERNAME}:${GOERLI_DB_PASSWORD}@mongo-goerli:27017"
    - --network
    - "goerli"
    - --adventurer
    - ${GOERLI_ADVENTURER_CONTRACT}
    - --beast
    - ${GOERLI_BEAST_CONTRACT}
    - --loot
    - ${GOERLI_LOOT_CONTRACT}
    - --start_block
    - "808000"
    environment:
      PYTHONUNBUFFERED: "1"
      AUTH_TOKEN: ${AUTH_TOKEN}
    links:
    - mongo-goerli
    networks:
    - goerli_network

  indexer-devnet:
    image: starknetdev/loot-survivor-indexer:latest
    container_name: indexer-devnet
    restart: always
    depends_on:
      - apibara
      - mongo-devnet
    command:
    - start
    - --server-url
    - "apibara:7171"
    - --mongo-url
    - "mongodb://${DEVNET_DB_USERNAME}:${DEVNET_DB_PASSWORD}@mongo-devnet:27018"
    - --network
    - "devnet"
    - --adventurer
    - ${DEVNET_ADVENTURER_CONTRACT}
    - --beast
    - ${DEVNET_BEAST_CONTRACT}
    - --loot
    - ${DEVNET_LOOT_CONTRACT}
    environment:
      PYTHONUNBUFFERED: "1"
    networks:
    - devnet_network

  graphql:
    image: starknetdev/loot-survivor-indexer:latest
    container_name: graphql
    restart: always
    command:
    - graphql
    - --mongo_goerli
    - "mongodb://${GOERLI_DB_USERNAME}:${GOERLI_DB_PASSWORD}@mongo-goerli:27017"
    - --mongo_devnet
    - "mongodb://${DEVNET_DB_USERNAME}:${DEVNET_DB_PASSWORD}@mongo-devnet:27018"
    - --port
    - "8080"
    environment:
      PYTHONUNBUFFERED: "1"
    ports:
      - 8080:8080
    volumes:
      - /etc/letsencrypt/live/survivor-indexer.bibliothecadao.xyz/fullchain.pem:/app/fullchain.pem
      - /etc/letsencrypt/live/survivor-indexer.bibliothecadao.xyz/privkey.pem:/app/privkey.pem
    networks:
      - devnet_network
      - goerli_network

  nginx:
    image: nginx
    restart: always
    container_name: nginx
    depends_on:
      - devnet
    networks:
      - devnet_network
    ports:
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt/live/survivor-indexer.bibliothecadao.xyz/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - /etc/letsencrypt/live/survivor-indexer.bibliothecadao.xyz/privkey.pem:/etc/nginx/ssl/privkey.pem

volumes:
  certs:

networks:
  devnet_network:
  goerli_network:
